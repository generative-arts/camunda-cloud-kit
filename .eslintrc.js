module.exports = {
  env: {
    node: true,
    browser: true,
    es2020: true,
  },
  extends: [],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 11,
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint'],
  rules: {
    // Possible Errors
    'for-direction': 'off',
    'getter-return': 'error',
    'no-async-promise-executor': 'warn',
    'no-await-in-loop': 'warn',
    'no-compare-neg-zero': 'warn',
    'no-cond-assign': 'error',
    'no-console': 'warn',
    'no-constant-condition': 'error',
    'no-control-regex': 'warn',
    'no-debugger': 'error',
    'no-dupe-args': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty': 'warn',
    'no-empty-character-class': 'error',
    'no-ex-assign': 'error',
    'no-extra-boolean-cast': 'warn',
    'no-extra-parens': 'off', // Prettier
    'no-extra-semi': 'off', // Prettier
    'no-func-assign': 'off',
    'no-import-assign': 'off',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-irregular-whitespace': 'error',
    'no-loss-of-precision': 'warn',
    'no-misleading-character-class': 'error',
    'no-obj-calls': 'error',
    'no-promise-executor-return': 'error',
    'no-prototype-builtins': 'error',
    'no-regex-spaces': 'error',
    'no-setter-return': 'error',
    'no-sparse-arrays': 'warn',
    'no-template-curly-in-string': 'warn',
    'no-unexpected-multiline': 'error',
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-useless-backreference': 'error',
    'require-atomic-updates': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'error',

    // Best Practices
    'accessor-pairs': 'error',
    'array-callback-return': 'warn',
    'block-scoped-var': 'off', // We disallow var completely
    'class-methods-use-this': 'error',
    complexity: 'off',
    'consistent-return': 'off',
    curly: 'error',
    'default-case': 'off',
    'default-case-last': 'error',
    'default-param-last': 'off',
    'dot-location': 'off', // Prettier
    'dot-notation': 'warn',
    eqeqeq: ['error', 'always', { null: 'ignore' }],
    'grouped-accessor-pairs': 'warn',
    'guard-for-in': 'off',
    'max-classes-per-file': 'off',
    'no-alert': 'warn',
    'no-caller': 'off',
    'no-case-declarations': 'error',
    'no-constructor-return': 'error',
    'no-div-regex': 'error',
    'no-else-return': 'off', // Who thought that this was a good idea?!?!
    'no-empty-function': 'off', // Annoying: Marks all service import constructors that are otherwise empty
    'no-empty-pattern': 'warn',
    'no-eq-null': 'off',
    'no-eval': 'warn',
    'no-extend-native': 'error',
    'no-extra-bind': 'warn',
    'no-extra-label': 'error',
    'no-fallthrough': 'warn',
    'no-floating-decimal': 'error',
    'no-global-assign': 'error',
    'no-implicit-coercion': ['error', { allow: ['!!'] }],
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-loop-func': 'error',
    'no-magic-numbers': 'off', // Blocking 60 * 60 * 1000 seems rather inconventient
    'no-multi-spaces': 'off', // Prettier
    'no-multi-str': 'error',
    'no-new': 'warn',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': 'warn',
    'no-proto': 'off',
    'no-redeclare': 'error',
    'no-restricted-properties': 'off',
    'no-return-assign': 'error',
    'no-return-await': 'error',
    'no-script-url': 'error',
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'warn',
    'no-throw-literal': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unused-expressions': 'error',
    'no-unused-labels': 'error',
    'no-useless-call': 'error',
    'no-useless-catch': 'error',
    'no-useless-concat': 'error',
    'no-useless-escape': 'error',
    'no-useless-return': 'error',
    'no-void': 'error',
    'no-warning-comments': 'off',
    'no-with': 'error',
    'prefer-named-capture-group': 'warn',
    'prefer-promise-reject-errors': 'warn', // CHECK ME: This rule might be annoying - it should probably be revisited.
    'prefer-regex-literals': 'error',
    radix: ['error', 'as-needed'],
    'require-await': 'error',
    'require-unicode-regexp': 'error',
    'vars-on-top': 'off',
    'wrap-iife': 'error',
    yoda: 'off', // Assignments in statement headers are already prevented

    // Variables
    'init-declarations': 'off',
    'no-delete-var': 'error',
    'no-label-var': 'error',
    'no-restricted-globals': 'error',
    'no-shadow': 'error',
    'no-shadow-restricted-names': 'off',
    'no-undef': 'off',
    'no-undef-init': 'warn',
    'no-undefined': 'off',
    'no-unused-vars': 'off', // Erroneously reports service imports
    'no-use-before-define': 'off',

    // Basically all Stylistic Rules are omitted as Prettier takes care of that.
    'id-length': [
      'error',
      { min: 3, exceptions: ['_', 'i', 'id', 'up', 'fs', 'a', 'b'] },
    ],
    'no-nested-ternary': 'error',

    // Modern ECMAScript
    'arrow-body-style': 'off',
    'arrow-parens': 'off', // Prettier
    'arrow-spacing': 'off', // Prettier
    'constructor-super': 'error',
    'generator-star-spacing': 'off', // Prettier
    'no-class-assign': 'error',
    'no-confusing-arrow': 'warn', // CHECK ME: This rule might be annoying - it should probably be revisited.
    'no-const-assign': 'off',
    'no-dupe-class-members': 'off',
    'no-duplicate-imports': 'off',
    'no-new-symbol': 'error',
    'no-restricted-exports': 'off',
    'no-restricted-imports': 'off',
    'no-this-before-super': 'off',
    'no-useless-computed-key': 'warn',
    'no-useless-constructor': 'off', // Erroneously reports service imports
    'no-useless-rename': 'error',
    'no-var': 'error',
    'object-shorthand': 'error',
    'prefer-arrow-callback': 'warn',
    'prefer-const': 'off',
    'prefer-destructuring': 'off',
    'prefer-numeric-literals': 'error',
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'require-yield': 'error',
    'rest-spread-spacing': 'off', // Prettier
    'sort-imports': 'off',
    'symbol-description': 'warn',
    'template-curly-spacing': 'off', // Prettier
    'yield-star-spacing': 'off', // Prettier
  },
}
